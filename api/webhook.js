// webhook.js
import { Configuration, OpenAIApi } from 'openai';

const configuration = new Configuration({
    apiKey: process.env.OPENAI_API_KEY,
});
const openai = new OpenAIApi(configuration);

// –ü—Ä–∏–º–µ—Ä –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π (–º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä–∏—Ç—å)
const knowledgeBase = [
    { question: "Westernpips Trade Monitor installation guide", answer: "Here's the installation guide for Westernpips Trade Monitor..." },
    // –î–æ–±–∞–≤—å—Ç–µ –±–æ–ª—å—à–µ –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–≤–µ—Ç–æ–≤
];

function getKnowledgeBaseAnswer(question) {
    const entry = knowledgeBase.find(item => item.question.toLowerCase() === question.toLowerCase());
    return entry ? entry.answer : null;
}

export default async function handler(req, res) {
    if (req.method === 'POST') {
        const { userId, userMessage } = req.body;

        if (!userMessage) {
            console.error("–û—à–∏–±–∫–∞: 'userMessage' –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –∑–∞–ø—Ä–æ—Å–µ.");
            return res.status(400).json({ success: false, error: "–ü–æ–ª–µ 'userMessage' –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ." });
        }

        try {
            // –ò—â–µ–º –æ—Ç–≤–µ—Ç –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π
            let answer = getKnowledgeBaseAnswer(userMessage);

            // –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω, –æ–±—Ä–∞—â–∞–µ–º—Å—è –∫ OpenAI
            if (!answer) {
                console.log(`–í–æ–ø—Ä–æ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π. –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ GPT: ${userMessage}`);
                const gptResponse = await openai.createChatCompletion({
                    model: 'gpt-3.5-turbo',
                    messages: [{ role: 'user', content: userMessage }],
                });
                answer = gptResponse.data.choices[0].message.content;
            }

            // –õ–æ–≥ –æ—Ç–≤–µ—Ç–∞
            console.log(`–û—Ç–≤–µ—Ç —á–µ—Ä–µ–∑ –≤–µ–±—Ö—É–∫: ${answer}`);
            res.status(200).json({ success: true, answer, status: "üëç Webhook —Ä–∞–±–æ—Ç–∞–µ—Ç" });
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞:', error);
            res.status(500).json({ success: false, error: error.message, status: "üëæ Webhook –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç. –õ–æ–≥ –æ—à–∏–±–∫–∏: " + error.message });
        }
    } else {
        res.status(404).send('Not found üëæ');
    }
};
